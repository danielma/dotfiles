#!/bin/bash

CREDS=$(cat ~/.sptf-creds.json)

REFRESH=$(echo $CREDS | jq -r '.refresh')
ACCESS=$(echo $CREDS | jq -r '.access')
CLIENT_ID=$(echo $CREDS | jq -r '.client_id')
CLIENT_SECRET=$(echo $CREDS | jq -r '.client_secret')


b64() {
    echo -n "$1" | base64
}

refresh() {
    auth=$(b64 "$CLIENT_ID:$CLIENT_SECRET")
    curl --request POST \
         --url https://accounts.spotify.com/api/token \
         --header "authorization: Basic $auth" \
         -d "grant_type=refresh_token&refresh_token=$REFRESH" \
         -sS
}

refreshAndSave() {
    >&2 echo 'refreshing token'
    >&2 echo "$1"
    token=$(refresh | jq -r '.access_token')
    cat ~/.sptf-creds.json  | jq -r "setpath([\"access\"]; \"$token\")" > /tmp/sptf-creds.json
    cat /tmp/sptf-creds.json > ~/.sptf-creds.json
}

_request() {
    >&2 echo "$1" "$2" "$3"
    if [ -z "$3" ]; then
        curl --request $1 \
             --url https://api.spotify.com/v1/$2 \
             --header "authorization: Bearer $ACCESS" \
             --header "accept: application/json" \
             -sS
    else
        curl --request $1 \
             --url https://api.spotify.com/v1/$2 \
             --header "authorization: Bearer $ACCESS" \
             --header "accept: application/json" \
             -d "$3" \
             -sS
    fi
}

request() {
    result=$(_request "$1" "$2" "$3")

    if [ -z "$result" ]; then
        echo "$result"
    else
        error=$(echo "$result" | jq -re '.error.message | tostring')

        if [[ "$error" == "null" ]]; then
            echo "$result"
        else
            refreshAndSave "$result"
            _request "$1" "$2" "$3"
        fi
    fi
}

getInfo() {
    request GET "me/player/currently-playing"
}

getTrackId() {
    echo $(getInfo) | jq -r '.item.id'
}

saveToLibrary() {
    id=$(getTrackId)
    request PUT "me/tracks" "{\"ids\": [\"$id\"]}"
}

case $1 in
    info)
        getInfo
        ;;
    save)
        saveToLibrary
        ;;
    getTrackId)
        getTrackId
        ;;
    *)
        echo $1
        ;;
esac
