#!/usr/bin/env ruby

require 'json'

LOG = false
YABAI = '/usr/local/bin/yabai'

if LOG
  LOG_FILE = File.open("#{__FILE__}.log", "a")

  # require 'awesome_print'
  require 'pp'

  LOG_FILE.puts("---------")
end

def log(info, awesome: false)
  return unless LOG

  if awesome
    PP.pp(info, LOG_FILE)
  else
    LOG_FILE.puts(info)
  end
end

ON_SCREEN_APPS = ['Emacs', 'iTerm', 'Slack', 'Trello', 'Tuple', 'Houseparty', 'Logic Pro X', 'Around', 'zoom.us', 'Adobe Premiere Pro 2020']
APPS_THAT_SHOULD_ALWAYS_HIDE = ['Google Chrome', 'Brave Browser', 'Spotify', 'Messages']

recent_pid = ENV['YABAI_RECENT_PROCESS_ID'].to_i
current_pid = ENV['YABAI_PROCESS_ID'].to_i

@recent_app = File.basename(`ps -o comm= -p #{recent_pid}`.strip)
current_app = File.basename(`ps -o comm= -p #{current_pid}`.strip)

yabai_windows = JSON.parse(`#{YABAI} -m query --windows`)

current_yabai_window = yabai_windows.find { |w| w["pid"] == current_pid && w["has-focus"] }
recent_yabai_window = yabai_windows.find { |w| w["pid"] == recent_pid }

# pp current_yabai_window
# pp recent_yabai_window

def hide_the_last_app
  `osascript -e 'tell application "System Events" to tell process "#{@recent_app}" to set visible to false'`
end

log "recent_app: #{@recent_app}"
log "current_app: #{current_app}"
log recent_yabai_window, awesome: true
log current_yabai_window, awesome: true

if recent_yabai_window && current_app && current_yabai_window
  if !ON_SCREEN_APPS.include?(@recent_app) && recent_yabai_window["is-floating"] && @recent_app != current_app && !current_yabai_window["is-floating"]
    hide_the_last_app
  end
end


LOG_FILE.close if LOG

# if APPS_THAT_SHOULD_ALWAYS_HIDE.include?(@recent_app) && APPS_THAT_SHOULD_ALWAYS_HIDE.include?(current_app)
#   hide_the_last_app

#   exit
# end

# if APPS_THAT_SHOULD_ALWAYS_HIDE.include?(@recent_app) && recent_yabai_window["floating"] == 1 && current_yabai_window["floating"].zero?
#   hide_the_last_app

#   exit
# end
